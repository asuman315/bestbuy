{"version":3,"file":"be14c14f.js","sources":["../../../src/components/account/EditAccountDetails.client.jsx"],"sourcesContent":["import {useCallback, useState} from 'react';\nimport {useServerProps} from '@shopify/hydrogen';\n\nfunction emailValidation(email) {\n  if (email.validity.valid) return null;\n\n  return email.validity.valueMissing\n    ? 'Please enter an email'\n    : 'Please enter a valid email';\n}\n\nfunction passwordValidation(password) {\n  if (password.validity.valid) return null;\n\n  if (password.validity.valueMissing) {\n    return 'Please enter a password';\n  }\n\n  return 'Password must be at least 6 characters';\n}\n\nexport default function EditAccountDetails({\n  firstName: _firstName = '',\n  lastName: _lastName = '',\n  phone: _phone = '',\n  email: _email = '',\n}) {\n  const {setServerProps} = useServerProps();\n\n  const close = useCallback(\n    () => setServerProps('editingAccount', false),\n    [setServerProps],\n  );\n\n  const [saving, setSaving] = useState(false);\n  const [firstName, setFirstName] = useState(_firstName);\n  const [lastName, setLastName] = useState(_lastName);\n  const [phone, setPhone] = useState(_phone);\n  const [email, setEmail] = useState(_email);\n  const [emailError, setEmailError] = useState(null);\n  const [currentPasswordError, setCurrentPasswordError] = useState();\n  const [newPasswordError, setNewPasswordError] = useState();\n  const [newPassword2Error, setNewPassword2Error] = useState();\n  const [submitError, setSubmitError] = useState(null);\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    setEmailError(null);\n    setCurrentPasswordError(null);\n    setNewPasswordError(null);\n    setNewPassword2Error(null);\n\n    const emailError = emailValidation(event.target.email);\n    if (emailError) {\n      setEmailError(emailError);\n    }\n\n    let currentPasswordError, newPasswordError, newPassword2Error;\n\n    // Only validate the password fields if the current password has a value\n    if (event.target.currentPassword.value) {\n      currentPasswordError = passwordValidation(event.target.currentPassword);\n      if (currentPasswordError) {\n        setCurrentPasswordError(currentPasswordError);\n      }\n\n      newPasswordError = passwordValidation(event.target.newPassword);\n      if (newPasswordError) {\n        setNewPasswordError(newPasswordError);\n      }\n\n      newPassword2Error =\n        event.target.newPassword.value !== event.target.newPassword2.value\n          ? 'The two passwords entered did not match'\n          : null;\n      if (newPassword2Error) {\n        setNewPassword2Error(newPassword2Error);\n      }\n    }\n\n    if (\n      emailError ||\n      currentPasswordError ||\n      newPasswordError ||\n      newPassword2Error\n    ) {\n      return;\n    }\n\n    setSaving(true);\n\n    const accountUpdateResponse = await callAccountUpdateApi({\n      email,\n      newPassword: event.target.newPassword.value,\n      currentPassword: event.target.currentPassword.value,\n      phone,\n      firstName,\n      lastName,\n    });\n\n    setSaving(false);\n\n    if (accountUpdateResponse.error) {\n      setSubmitError(accountUpdateResponse.error);\n      return;\n    }\n\n    close();\n  }\n\n  return (\n    <div className=\"flex justify-center mt-8\">\n      <div className=\"max-w-md w-full\">\n        <button onClick={close}>{'< Back'}</button>\n        <h1 className=\"text-5xl mt-4\">Edit account details</h1>\n        <form noValidate className=\"mt-6\" onSubmit={onSubmit}>\n          {submitError && (\n            <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\n              <p className=\"m-4 text-s text-white\">{submitError}</p>\n            </div>\n          )}\n          <h2 className=\"text-xl font-medium\">Profile</h2>\n          <div className=\"mt-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-gray-800 placeholder:text-gray-500 leading-tight focus:shadow-outline border-gray-900`}\n              id=\"firstname\"\n              name=\"firstname\"\n              type=\"text\"\n              autoComplete=\"given-name\"\n              placeholder=\"First name\"\n              aria-label=\"First name\"\n              value={firstName}\n              onChange={(event) => {\n                setFirstName(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mt-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-gray-800 placeholder:text-gray-500 leading-tight focus:shadow-outline border-gray-900`}\n              id=\"lastname\"\n              name=\"lastname\"\n              type=\"text\"\n              autoComplete=\"family-name\"\n              placeholder=\"Last name\"\n              aria-label=\"Last name\"\n              value={lastName}\n              onChange={(event) => {\n                setLastName(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mt-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-gray-800 placeholder:text-gray-500 leading-tight focus:shadow-outline border-gray-900`}\n              id=\"phone\"\n              name=\"phone\"\n              type=\"tel\"\n              autoComplete=\"tel\"\n              placeholder=\"Mobile\"\n              aria-label=\"Mobile\"\n              value={phone}\n              onChange={(event) => {\n                setPhone(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mt-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-gray-800 placeholder:text-gray-500 leading-tight focus:shadow-outline ${\n                emailError ? ' border-red-500' : 'border-gray-900'\n              }`}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              placeholder=\"Email address\"\n              aria-label=\"Email address\"\n              value={email}\n              onChange={(event) => {\n                setEmail(event.target.value);\n              }}\n            />\n            <p\n              className={`text-red-500 text-xs ${\n                !emailError ? 'invisible' : ''\n              }`}\n            >\n              {emailError} &nbsp;\n            </p>\n          </div>\n          <h2 className=\"text-xl font-medium mt-4\">Security</h2>\n          <Password\n            name=\"currentPassword\"\n            label=\"Current password\"\n            passwordError={currentPasswordError}\n          />\n          <Password\n            name=\"newPassword\"\n            label=\"New password\"\n            passwordError={newPasswordError}\n          />\n          <p\n            className={`text-sm font-medium ${\n              currentPasswordError || newPasswordError ? 'text-red-500' : ''\n            }`}\n          >\n            Passwords must be at least 6 characters.\n          </p>\n          <Password\n            name=\"newPassword2\"\n            label=\"Re-enter new password\"\n            passwordError={newPassword2Error}\n          />\n          <p\n            className={`text-red-500 text-xs ${\n              !newPassword2Error ? 'invisible' : ''\n            }`}\n          >\n            {newPassword2Error} &nbsp;\n          </p>\n          <div className=\"mt-4\">\n            <button\n              className=\"bg-gray-900 border border-gray-900 text-white uppercase py-3 px-4 focus:shadow-outline block w-full\"\n              type=\"submit\"\n              disabled={saving}\n            >\n              Save\n            </button>\n          </div>\n          <div>\n            <button\n              className=\"mt-3 text-center border border-gray-900 uppercase py-3 px-4 focus:shadow-outline block w-full\"\n              onClick={close}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction Password({name, passwordError, label}) {\n  const [password, setPassword] = useState('');\n\n  return (\n    <div className=\"mt-3\">\n      <input\n        className={`mb-1 appearance-none border w-full py-2 px-3 text-gray-800 placeholder:text-gray-500 leading-tight focus:shadow-outline ${\n          passwordError ? ' border-red-500' : 'border-gray-900'\n        }`}\n        id={name}\n        name={name}\n        type=\"password\"\n        autoComplete={name === 'currentPassword' ? 'current-password' : null}\n        placeholder={label}\n        aria-label={label}\n        value={password}\n        minLength={8}\n        required\n        onChange={(event) => {\n          setPassword(event.target.value);\n        }}\n      />\n    </div>\n  );\n}\n\nfunction callAccountUpdateApi({\n  email,\n  phone,\n  firstName,\n  lastName,\n  currentPassword,\n  newPassword,\n}) {\n  return fetch(`/account`, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      phone,\n      firstName,\n      lastName,\n      currentPassword,\n      newPassword,\n    }),\n  })\n    .then((res) => {\n      if (res.ok) {\n        return {};\n      } else {\n        return res.json();\n      }\n    })\n    .catch(() => {\n      return {\n        error: 'Error saving account. Please try again.',\n      };\n    });\n}\n"],"names":["email","validity","valid","valueMissing","password","firstName","_firstName","lastName","_lastName","phone","_phone","_email","setServerProps","useServerProps","close","useCallback","saving","setSaving","useState","setFirstName","setLastName","setPhone","setEmail","emailError","setEmailError","currentPasswordError","setCurrentPasswordError","newPasswordError","setNewPasswordError","newPassword2Error","setNewPassword2Error","submitError","setSubmitError","event","preventDefault","emailValidation","target","currentPassword","value","passwordValidation","newPassword","newPassword2","accountUpdateResponse","callAccountUpdateApi","error","_jsx","_jsxs","name","passwordError","label","setPassword","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","catch"],"mappings":"8RAGA,WAAyBA,EAAO,CAC9B,MAAIA,GAAMC,SAASC,MAAc,KAE1BF,EAAMC,SAASE,aAClB,wBACA,4BACL,CAED,WAA4BC,EAAU,CACpC,MAAIA,GAASH,SAASC,MAAc,KAEhCE,EAASH,SAASE,aACb,0BAGF,wCACR,CAE0C,WAAA,CACzCE,UAAWC,EAAa,GACxBC,SAAUC,EAAY,GACtBC,MAAOC,EAAS,GAChBV,MAAOW,EAAS,IACf,CACK,KAAA,CAACC,kBAAkBC,EAAzB,EAEMC,EAAQC,sBACZ,IAAMH,EAAe,iBAAkB,EAAnB,EACpB,CAACA,CAAD,CAFuB,EAKnB,CAACI,EAAQC,GAAaC,EAAAA,QAAAA,SAAS,EAAD,EAC9B,CAACb,EAAWc,GAAgBD,EAAAA,QAAAA,SAASZ,CAAD,EACpC,CAACC,EAAUa,GAAeF,EAAAA,QAAAA,SAASV,CAAD,EAClC,CAACC,EAAOY,GAAYH,EAAAA,QAAAA,SAASR,CAAD,EAC5B,CAACV,EAAOsB,GAAYJ,EAAAA,QAAAA,SAASP,CAAD,EAC5B,CAACY,EAAYC,GAAiBN,EAAAA,QAAAA,SAAS,IAAD,EACtC,CAACO,EAAsBC,GAA2BR,EAAxD,QAAA,SAAA,EACM,CAACS,EAAkBC,GAAuBV,EAAhD,QAAA,SAAA,EACM,CAACW,EAAmBC,GAAwBZ,EAAlD,QAAA,SAAA,EACM,CAACa,EAAaC,GAAkBd,EAAAA,QAAAA,SAAS,IAAD,EAE9C,iBAAwBe,EAAO,CAC7BA,EAAMC,eAAN,EAEAV,EAAc,IAAD,EACbE,EAAwB,IAAD,EACvBE,EAAoB,IAAD,EACnBE,EAAqB,IAAD,EAEpB,KAAMP,GAAaY,EAAgBF,EAAMG,OAAOpC,KAAd,EAClC,AAAIuB,GACFC,EAAcD,CAAD,EAGf,GAAIE,GAAsBE,EAAkBE,EAwB1CN,GArBEU,EAAMG,OAAOC,gBAAgBC,OACRC,GAAAA,EAAmBN,EAAMG,OAAOC,eAAd,EACrCZ,GACFC,EAAwBD,CAAD,EAGNc,EAAAA,EAAmBN,EAAMG,OAAOI,WAAd,EACjCb,GACFC,EAAoBD,CAAD,EAInBM,EAAAA,EAAMG,OAAOI,YAAYF,QAAUL,EAAMG,OAAOK,aAAaH,MACzD,0CACA,KACFT,GACFC,EAAqBD,CAAD,GAKtBN,GACAE,GACAE,GACAE,EAEA,OAGFZ,EAAU,EAAD,EAEHyB,KAAAA,GAAwB,KAAMC,GAAqB,CACvD3C,QACAwC,YAAaP,EAAMG,OAAOI,YAAYF,MACtCD,gBAAiBJ,EAAMG,OAAOC,gBAAgBC,MAC9C7B,QACAJ,YACAE,UAAAA,CANsD,EAWxD,GAFAU,EAAU,EAAD,EAELyB,EAAsBE,MAAO,CAC/BZ,EAAeU,EAAsBE,KAAvB,EACd,MACD,CAEI,GACN,CAED,SACE,MAAA,CAAK,UAAU,2BAAf,WACE,MAAA,CAAK,UAAU,kBAAf,SACE,CAAAC,EAAA,SAAA,CAAQ,QAAS/B,EAAjB,SAAyB,QAAA,CAAzB,EACA+B,EAAA,KAAA,CAAI,UAAU,gBAAd,SAAA,sBAAA,CAAA,EACAC,EAAA,OAAA,CAAM,WAAN,GAAiB,UAAU,OAAO,WAAlC,SAAA,CACGf,GACCc,EAAA,MAAA,CAAK,UAAU,oDAAf,WACE,IAAA,CAAG,UAAU,wBAAb,SAAsCd,CAAAA,CAAtC,CAAA,CADF,EAIFc,EAAA,KAAA,CAAI,UAAU,sBAAd,SAAA,SAAA,CAAA,EACAA,EAAA,MAAA,CAAK,UAAU,OAAf,WACE,QAAA,CACE,UAAY,0IACZ,GAAG,YACH,KAAK,YACL,KAAK,OACL,aAAa,aACb,YAAY,aACZ,aAAW,aACX,MAAOxC,EACP,SAAW4B,AAAU,GAAA,CACNA,EAAAA,EAAMG,OAAOE,KAAd,CACb,CAAA,CAXH,CAAA,CADF,EAeAO,EAAA,MAAA,CAAK,UAAU,OAAf,WACE,QAAA,CACE,UAAY,0IACZ,GAAG,WACH,KAAK,WACL,KAAK,OACL,aAAa,cACb,YAAY,YACZ,aAAW,YACX,MAAOtC,EACP,SAAW0B,AAAU,GAAA,CACPA,EAAAA,EAAMG,OAAOE,KAAd,CACZ,CAAA,CAXH,CAAA,CADF,EAeAO,EAAA,MAAA,CAAK,UAAU,OAAf,WACE,QAAA,CACE,UAAY,0IACZ,GAAG,QACH,KAAK,QACL,KAAK,MACL,aAAa,MACb,YAAY,SACZ,aAAW,SACX,MAAOpC,EACP,SAAWwB,AAAU,GAAA,CACVA,EAAAA,EAAMG,OAAOE,KAAd,CACT,CAAA,CAXH,CAAA,CADF,EAeAQ,EAAA,MAAA,CAAK,UAAU,OAAf,SACE,CAAAD,EAAA,QAAA,CACE,UAAY,2HACVtB,EAAa,kBAAoB,oBAEnC,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,SARF,GASE,YAAY,gBACZ,aAAW,gBACX,MAAOvB,EACP,SAAWiC,AAAU,GAAA,CACVA,EAAAA,EAAMG,OAAOE,KAAd,CACT,CAAA,CAdH,EAgBAQ,EAAA,IAAA,CACE,UAAY,wBACV,AAACvB,EAA2B,GAAd,cAFlB,SAAA,CAKGA,EALH,OAAA,CAAA,CAjBF,CAAA,CAAA,CAAA,EAyBAsB,EAAA,KAAA,CAAI,UAAU,2BAAd,SAAA,UAAA,CA7EF,EA8EEA,EAAC,EAAD,CACE,KAAK,kBACL,MAAM,mBACN,cAAepB,CAAAA,CAjFnB,EAmFEoB,EAAC,EAAD,CACE,KAAK,cACL,MAAM,eACN,cAAelB,CAAAA,CAHjB,EAKAkB,EAAA,IAAA,CACE,UAAY,uBACVpB,GAAwBE,EAAmB,eAAiB,KAFhE,SAAA,0CAAA,CAxFF,EA+FEkB,EAAC,EAAD,CACE,KAAK,eACL,MAAM,wBACN,cAAehB,CAAAA,CAHjB,EAKAiB,EAAA,IAAA,CACE,UAAY,wBACV,AAACjB,EAAkC,GAAd,cAFzB,SAAA,CAKGA,EALH,OAAA,CAAA,CAAA,EAOAgB,EAAA,MAAA,CAAK,UAAU,OAAf,WACE,SAAA,CACE,UAAU,sGACV,KAAK,SACL,SAAU7B,EAHZ,SAAA,MAAA,CAAA,CAAA,CADF,EASA6B,EAAA,MAAA,CAAA,WACE,SAAA,CACE,UAAU,gGACV,QAAS/B,EAFX,SAAA,QAAA,CAAA,CAAA,CArHJ,CAAA,CAAA,CAHF,CAAA,CAAA,CAAA,CAAA,CAFJ,CAqID,CAED,WAAkB,CAACiC,OAAMC,gBAAeC,SAAQ,CAC9C,KAAM,CAAC7C,EAAU8C,GAAehC,EAAAA,QAAAA,SAAS,EAAD,EAExC,SACE,MAAA,CAAK,UAAU,OAAf,WACE,QAAA,CACE,UAAY,2HACV8B,EAAgB,kBAAoB,oBAEtC,GAAID,EACJ,OACA,KAAK,WACL,aAAcA,IAAS,kBAAoB,mBAAqB,KAChE,YAAaE,EACb,aAAYA,EACZ,MAAO7C,EACP,UAAW,EACX,SAZF,GAaE,SAAW6B,AAAU,GAAA,CACPA,EAAAA,EAAMG,OAAOE,KAAd,CACZ,CAAA,CAfH,CAAA,CAFJ,CAqBD,CAED,WAA8B,CAC5BtC,QACAS,QACAJ,YACAE,WACA8B,kBACAG,eACC,CACD,MAAOW,OAAO,WAAW,CACvBC,OAAQ,QACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,kBAFT,EAITC,KAAMC,KAAKC,UAAU,CACnBzD,QACAS,QACAJ,YACAE,WACA8B,kBACAG,aAAAA,CANI,CAAA,CANI,EAeTkB,KAAMC,AAAQ,GACTA,EAAIC,GACC,GAEAD,EAAIE,MAnBV,EAsBJC,MAAM,IACE,EACLlB,MAAO,yCAAA,EAxBN,CA2BR"}